#Launch a Python container name Abathur, 2-slim version
#its /root folder will be bound to a HOME folder on your host??
#its 3000 port will be bound to the 3000 port of your virtual machine
#personalize this container so that you can use the Flask micro-framework in its latest version
#You will make sure that an html page displaying "Hello World" with <h1> tags can be served by Flask. You will test that your container is properly set up by accessing, via curl or a web browser, the IP address of your virtual machine on the 3000 port.
#You will also list all the necessary commands in your repository.

docker run --name Abathur -v ~/:/root -p 3000:3000 -dit python:2-slim
docker exec Abathur pip install Flask
echo 'from flask import Flask\napp = Flask(__name__)\n@app.route("/")\ndef hello_world():\n\treturn "<h1>Hello, World!</h1>"' > ~/app.py
docker exec -e FLASK_APP=/root/app.py Abathur flask run --host=0.0.0.0 --port 3000

#http://flask.pocoo.org/docs/1.0/quickstart/
#check run with: curl $(docker-machine ip Char):3000
#or using the docker-machine ip and port on an URL
#the -dit flags mean to start the container detached (in the background), interactive (with the ability to type into it), and with a TTY (so you can see the input and output).
#
#
#The docker exec command runs a new command in a running container.
#The command started using docker exec only runs while the containerâ€™s primary process (PID 1) is running, and it is not restarted if the container is restarted.
